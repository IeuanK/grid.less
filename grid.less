/*
**           _____  _____   _____  _____     _       ______   _____  _____
**          / ____||  __ \ |_   _||  __ \   | |     |  ____| / ____|/ ____|
**         | |  __ | |__) |  | |  | |  | |  | |     | |__   | (___ | (___
**         | | |_ ||  _  /   | |  | |  | |  | |     |  __|   \___ \ \___ \
**         | |__| || | \ \  _| |_ | |__| |_ | |____ | |____  ____) |____) |
**          \_____||_|  \_\|_____||_____/(_)|______||______||_____/|_____/
**
**                  Grid.less modular CSS framework - MIT License
**                     https://github.com/IeuanK/grid.less
**
*/

// Minimum screen sizes, defaults to mobile
@mobile: 0px;
@small: 800px;
@medium: 1600px;
@large: 1920px;
@xlarge: 2560px;


@size-xs: @mobile;
@size-sm: @small;
@size-md: @medium;
@size-lg: @large;
@size-xl: @xlarge;

// Padding for screen size
@padding-xs: 0px;
@padding-sm: 5px;
@padding-md: 10px;
@padding-lg: 10px;
@padding-xl: 10px;

// Container width for screen size
@container-xs: 100%;
@container-sm: (@size-sm * 0.9);
@container-md: (@size-md * 0.9);
@container-lg: (@size-lg * 0.9);
@container-xl: @size-lg;

@one: 100% / 12;
@two: @one * 2;
@three: @one * 3;
@four: @one * 4;
@five: @one * 5;
@six: @one * 6;
@seven: @one * 7;
@eight: @one * 8;
@nine: @one * 9;
@ten: @one * 10;
@eleven: @one * 11;
@twelve: @one * 12;


/**
** You can create a variables.grid.less with any of the variables above
** Configuration ends here
 */

.container {
  display: block;
  clear: both;
  width: @twelve;
  margin-left: auto;
  margin-right: auto;
  padding: 0;
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}

.row {
  display: block;
  display: inline-flex;
  flex-wrap: wrap;
  flex-direction: row;
  width: 100%;
  padding: 0;
  margin: 0;
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
  clear: both;
}

.column, .col {
  width: @one;
  display: block;
  float: left;
  flex: @one;
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}

@media only screen and (min-width: @size-xs) {
  #gridnamespace > .grid-xs();
}
@media only screen and (min-width: @size-sm) {
  #gridnamespace > .grid-sm();
}
@media only screen and (min-width: @size-md) {
  #gridnamespace > .grid-md();
}
@media only screen and (min-width: @size-lg) {
  #gridnamespace > .grid-lg();
}
@media only screen and (min-width: @size-xl) {
  #gridnamespace > .grid-xl();
}

#gridnamespace {
  .grid-xs() {
    #gridnamespace > .grid-sizes(@size-xs, @container-xs, @padding-xs, xs);
  }

  .grid-sm() {
    #gridnamespace > .grid-sizes(@size-sm, @container-sm, @padding-sm, sm);
  }

  .grid-md() {
    #gridnamespace > .grid-sizes(@size-md, @container-md, @padding-md, md);
  }

  .grid-lg() {
    #gridnamespace > .grid-sizes(@size-lg, @container-lg, @padding-lg, lg);
  }

  .grid-xl() {
    #gridnamespace > .grid-sizes(@size-xl, @container-xl, @padding-xl, xl);
  }

  .grid-sizes(@f-w: 100%, @c-w: 90%, @p: 0px, @size: xs) {
    .container {
      width: @c-w;
    }
    .column, .col {
      padding-left: @p;
      padding-right: @p;
    }
    .col-@{size}-1 {
      .column;
      padding-left: @p;
      padding-right: @p;
      width: @one;
      flex: 0 0 @one;
    }
    .col-@{size}-2 {
      .column;
      padding-left: @p;
      padding-right: @p;
      width: @two;
      flex: 0 0 @two;
    }
    .col-@{size}-3 {
      .column;
      padding-left: @p;
      padding-right: @p;
      width: @three;
      flex: 0 0 @three;
    }
    .col-@{size}-4 {
      .column;
      padding-left: @p;
      padding-right: @p;
      width: @four;
      flex: 0 0 @four;
    }
    .col-@{size}-5 {
      .column;
      padding-left: @p;
      padding-right: @p;
      width: @five;
      flex: 0 0 @five;
    }
    .col-@{size}-6 {
      .column;
      padding-left: @p;
      padding-right: @p;
      width: @six;
      flex: 0 0 @six;
    }
    .col-@{size}-7 {
      .column;
      padding-left: @p;
      padding-right: @p;
      width: @seven;
      flex: 0 0 @seven;
    }
    .col-@{size}-8 {
      .column;
      padding-left: @p;
      padding-right: @p;
      width: @eight;
      flex: 0 0 @eight;
    }
    .col-@{size}-9 {
      .column;
      padding-left: @p;
      padding-right: @p;
      width: @nine;
      flex: 0 0 @nine;
    }
    .col-@{size}-10 {
      .column;
      padding-left: @p;
      padding-right: @p;
      width: @ten;
      flex: 0 0 @ten;
    }
    .col-@{size}-11 {
      .column;
      padding-left: @p;
      padding-right: @p;
      width: @eleven;
      flex: 0 0 @eleven;
    }
    .col-@{size}-12 {
      .column;
      padding-left: @p;
      padding-right: @p;
      width: @twelve;
      flex: 0 0 @twelve;
    }
  }
}

@import (optional) "form.grid";
@import (optional) "pretty.grid";
@import (optional) "debug.grid";

@import (optional) "variables.grid";